<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ ============LICENSE_START=======================================================
  ~ dcaegen2-collectors-veshv
  ~ ================================================================================
  ~ Copyright (C) 2018-2021 NOKIA
  ~ Copyright (C) 2022 Nordix Foundation
  ~ ================================================================================
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~      http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  ~ ============LICENSE_END=========================================================
  -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <licenses>
        <license>
            <name>The Apache Software License, Version 2.0</name>
            <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
        </license>
    </licenses>

    <parent>
        <groupId>org.onap.oparent</groupId>
        <artifactId>oparent</artifactId>
        <version>3.0.0</version>
        <relativePath/>
    </parent>

    <groupId>org.onap.dcaegen2.collectors.hv-ves</groupId>
    <artifactId>ves-hv-collector</artifactId>
    <version>${revision}</version>
    <name>dcaegen2-collectors-veshv</name>
    <description>VES HighVolume Collector</description>
    <packaging>pom</packaging>

    <modules>
        <module>build</module>
        <module>sources</module>
    </modules>

    <properties>
        <revision>1.10.0-SNAPSHOT</revision>
        <maven-resources-plugin.version>3.2.0</maven-resources-plugin.version>
        <asm.version>9.1</asm.version>
        <commons-lang3.version>3.12.0</commons-lang3.version>
        <maven-failsafe-plugin.version>2.22.2</maven-failsafe-plugin.version>
        <maven-surefire-plugin.version>2.22.2</maven-surefire-plugin.version>
        <exec-maven-plugin.version>3.0.0</exec-maven-plugin.version>
        <os-maven-plugin.version>1.7.0</os-maven-plugin.version>
        <maven-dependency-plugin.version>3.1.2</maven-dependency-plugin.version>
        <docker-maven-plugin.version>0.34.1</docker-maven-plugin.version>
        <guava.version>30.1.1-jre</guava.version>
        <logback-classic.version>1.3.0-alpha4</logback-classic.version>
        <slf4j-api.version>2.0.0-alpha1</slf4j-api.version>
        <reactor-bom.version>2020.0.5</reactor-bom.version>
        <kafka-clients.version>2.7.0</kafka-clients.version>
        <commons-cli.version>1.4</commons-cli.version>
        <javax.json-api.version>1.1.4</javax.json-api.version>
        <javax.json.version>1.1.4</javax.json.version>
        <micrometer-registry-prometheus.version>1.6.5</micrometer-registry-prometheus.version>
        <assertj-core.version>3.19.0</assertj-core.version>
        <mockito-kotlin.version>2.2.0</mockito-kotlin.version>
        <coroutines.version>1.4.2</coroutines.version>
        <kotlin.version>1.4.10</kotlin.version>
        <arrow.version>0.9.0</arrow.version>
        <maven-compiler-plugin.version>3.8.1</maven-compiler-plugin.version>
        <build-helper-maven-plugin.version>3.2.0</build-helper-maven-plugin.version>
        <jacoco.version>0.8.3</jacoco.version>
        <detekt.version>1.15.0</detekt.version>
        <sdk.version>1.8.7</sdk.version>

        <!-- Protocol buffers -->
        <protobuf.version>4.0.0-rc-2</protobuf.version>

        <!-- Testing and code analysis -->
        <junit-platform.version>1.2.0</junit-platform.version>
        <junit-jupiter.version>5.8.0-M1</junit-jupiter.version>
        <spek.version>1.1.5</spek.version>
        <gson.version>2.8.6</gson.version>

        <failIfMissingUnitTests>false</failIfMissingUnitTests>
        <failIfMissingComponentTests>false</failIfMissingComponentTests>
        <skipAnalysis>true</skipAnalysis>
        <jacoco.minimum.coverage>60</jacoco.minimum.coverage>
        <skipEnforcer>true</skipEnforcer>
        <!--Specify path to load jacoco xml report, as Sonar can't load Kotlin coverage from binary report. -->
        <sonar.coverage.jacoco.xmlReportPaths>
            ${project.basedir}/../../build/hv-collector-coverage/target/site/jacoco-aggregate/jacoco.xml
        </sonar.coverage.jacoco.xmlReportPaths>

        <!-- Docker -->
        <skipDocker>false</skipDocker>
        <skipDockerPush>true</skipDockerPush>
        <maven.build.timestamp.format>yyyyMMdd'T'HHmmss</maven.build.timestamp.format>
        <docker-image.registry>${onap.nexus.dockerregistry.daily}</docker-image.registry>
        <docker-image.namespace>onap</docker-image.namespace>
        <docker-image.name>${project.groupId}.${project.artifactId}</docker-image.name>
        <docker-image.latest>latest</docker-image.latest>
        <docker.http_proxy/>
    </properties>

    <build>
        <sourceDirectory>${project.basedir}/src/main/kotlin</sourceDirectory>
        <testSourceDirectory>${project.basedir}/src/test/kotlin</testSourceDirectory>
        <resources>
            <resource>
                <directory>${project.basedir}/src/main/resources</directory>
            </resource>
        </resources>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-resources-plugin</artifactId>
                    <version>${maven-resources-plugin.version}</version>
                    <configuration>
                        <encoding>UTF-8</encoding>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-deploy-plugin</artifactId>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-enforcer-plugin</artifactId>
                    <configuration>
                        <skip>${skipEnforcer}</skip>
                    </configuration>
                </plugin>
                <plugin>
                    <artifactId>kotlin-maven-plugin</artifactId>
                    <groupId>org.jetbrains.kotlin</groupId>
                    <version>${kotlin.version}</version>
                    <configuration>
                        <jvmTarget>11</jvmTarget>
                    </configuration>
                    <executions>
                        <execution>
                            <id>compile</id>
                            <goals>
                                <goal>compile</goal>
                            </goals>
                            <configuration>
                                <sourceDirs>
                                    <source>${project.build.sourceDirectory}</source>
                                    <source>${project.build.directory}/generated-sources/annotations</source>
                                </sourceDirs>
                            </configuration>
                        </execution>
                        <execution>
                            <id>test-compile</id>
                            <goals>
                                <goal>test-compile</goal>
                            </goals>
                            <configuration>
                                <sourceDirs>
                                    <source>${project.build.testSourceDirectory}</source>
                                </sourceDirs>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>${maven-compiler-plugin.version}</version>
                    <configuration>
                        <source>11</source>
                        <target>11</target>
                        <encoding>UTF-8</encoding>
                        <showWarnings>true</showWarnings>
                        <showDeprecation>true</showDeprecation>
                        <failOnWarning>false</failOnWarning>
                    </configuration>
                    <dependencies>
                        <dependency>
                            <groupId>org.ow2.asm</groupId>
                            <artifactId>asm</artifactId>
                            <version>${asm.version}</version> <!-- Use newer version of ASM -->
                        </dependency>
                    </dependencies>
                </plugin>
                <!--
                 Due to a memory leak in Surefire 2.20 and issues running on Java 9, the junit-platform-surefire-provider
                 currently only works with Surefire 2.19.1.
                 For updates see https://junit.org/junit5/docs/current/user-guide/#running-tests-build-maven
                 -->
                <plugin>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <groupId>org.apache.maven.plugins</groupId>
                    <version>${maven-surefire-plugin.version}</version>
                    <configuration>
                        <failIfNoTests>${failIfMissingUnitTests}</failIfNoTests>
                        <forkCount>1</forkCount>
                        <includes>
                            <include>**/*Test.*</include>
                        </includes>
                    </configuration>
                    <dependencies>
                        <dependency>
                            <groupId>org.apache.commons</groupId>
                            <artifactId>commons-lang3</artifactId>
                            <version>${commons-lang3.version}</version>
                        </dependency>
                        <dependency>
                            <groupId>org.junit.platform</groupId>
                            <artifactId>junit-platform-surefire-provider</artifactId>
                            <version>${junit-platform.version}</version>
                            <scope>runtime</scope>
                        </dependency>
                        <dependency>
                            <groupId>org.jetbrains.spek</groupId>
                            <artifactId>spek-junit-platform-engine</artifactId>
                            <version>${spek.version}</version>
                            <scope>runtime</scope>
                        </dependency>
                    </dependencies>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-failsafe-plugin</artifactId>
                    <version>${maven-failsafe-plugin.version}</version>
                    <configuration>
                        <failIfNoTests>${failIfMissingComponentTests}</failIfNoTests>
                        <forkCount>1</forkCount>
                        <includes>
                            <include>**/*Specification.*</include>
                        </includes>
                    </configuration>
                    <dependencies>
                        <dependency>
                            <groupId>org.apache.commons</groupId>
                            <artifactId>commons-lang3</artifactId>
                            <version>${commons-lang3.version}</version>
                        </dependency>
                        <dependency>
                            <groupId>org.junit.platform</groupId>
                            <artifactId>junit-platform-surefire-provider</artifactId>
                            <version>${junit-platform.version}</version>
                            <scope>runtime</scope>
                        </dependency>
                        <dependency>
                            <groupId>org.jetbrains.spek</groupId>
                            <artifactId>spek-junit-platform-engine</artifactId>
                            <version>${spek.version}</version>
                            <scope>runtime</scope>
                        </dependency>
                    </dependencies>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>exec-maven-plugin</artifactId>
                    <version>${exec-maven-plugin.version}</version>
                </plugin>
            </plugins>
        </pluginManagement>
        <extensions>
            <extension>
                <groupId>kr.motd.maven</groupId>
                <artifactId>os-maven-plugin</artifactId>
                <version>${os-maven-plugin.version}</version>
            </extension>
        </extensions>
    </build>

    <profiles>
        <profile>
            <id>docker-proxy</id>
            <activation>
                <property>
                    <name>docker.http_proxy</name>
                </property>
            </activation>
            <properties>
                <!-- set build args as defined in https://dmp.fabric8.io/#build-buildargs -->
                <docker.buildArg.http_proxy>${docker.http_proxy}</docker.buildArg.http_proxy>
                <docker.buildArg.https_proxy>${docker.http_proxy}</docker.buildArg.https_proxy>
            </properties>
        </profile>

        <profile>
            <id>docker</id>
            <activation>
                <property>
                    <name>!skipDocker</name>
                </property>
            </activation>
            <properties>
                <os.detected.name>linux</os.detected.name>
                <os.detected.arch>x86_64</os.detected.arch>
                <os.detected.classifier>${os.detected.name}-${os.detected.arch}</os.detected.classifier>
            </properties>
            <build>
                <pluginManagement>
                    <plugins>
                        <plugin>
                            <groupId>org.apache.maven.plugins</groupId>
                            <artifactId>maven-dependency-plugin</artifactId>
                            <version>${maven-dependency-plugin.version}</version>
                            <executions>
                                <execution>
                                    <id>docker-copy-internal-deps</id>
                                    <phase>package</phase>
                                    <goals>
                                        <goal>copy-dependencies</goal>
                                    </goals>
                                    <configuration>
                                        <outputDirectory>${project.build.directory}/libs/internal</outputDirectory>
                                        <includeGroupIds>${project.parent.groupId}</includeGroupIds>
                                        <includeScope>runtime</includeScope>
                                    </configuration>
                                </execution>
                                <execution>
                                    <id>docker-copy-external-deps</id>
                                    <phase>package</phase>
                                    <goals>
                                        <goal>copy-dependencies</goal>
                                    </goals>
                                    <configuration>
                                        <outputDirectory>${project.build.directory}/libs/external</outputDirectory>
                                        <excludeGroupIds>${project.parent.groupId}</excludeGroupIds>
                                        <includeScope>runtime</includeScope>
                                    </configuration>
                                </execution>
                            </executions>
                        </plugin>
                        <plugin>
                            <groupId>io.fabric8</groupId>
                            <artifactId>docker-maven-plugin</artifactId>
                            <version>${docker-maven-plugin.version}</version>
                            <executions>
                                <execution>
                                    <id>docker-build-image</id>
                                    <phase>package</phase>
                                    <goals>
                                        <goal>build</goal>
                                    </goals>
                                </execution>
                                <execution>
                                    <id>docker-push-image</id>
                                    <phase>deploy</phase>
                                    <goals>
                                        <goal>push</goal>
                                    </goals>
                                </execution>
                            </executions>
                            <configuration>
                                <skipPush>${skipDockerPush}</skipPush>
                                <verbose>true</verbose>
                                <imagePullPolicy>IfNotPresent</imagePullPolicy>
                                <images>
                                    <image>
                                        <alias>${project.artifactId}</alias>
                                        <name>${docker-image.namespace}/${docker-image.name}:${project.version}
                                        </name>
                                        <registry>${docker-image.registry}</registry>
                                        <build>
                                            <dockerFileDir>${project.basedir}</dockerFileDir>
                                            <tags>
                                                <tag>${project.version}-${maven.build.timestamp}Z</tag>
                                                <tag>${docker-image.latest}</tag>
                                            </tags>
                                        </build>
                                    </image>
                                </images>
                            </configuration>
                        </plugin>
                    </plugins>
                </pluginManagement>
            </build>
        </profile>
    </profiles>

    <pluginRepositories>
        <pluginRepository>
            <id>kotlinx-repository</id>
            <name>kotlinx-repository</name>
            <url>https://maven.pkg.jetbrains.space/public/p/kotlinx-html/maven</url>
            <releases>
                <enabled>true</enabled>
                <updatePolicy>never</updatePolicy>
            </releases>
            <snapshots>
                <enabled>false</enabled>
                <updatePolicy>never</updatePolicy>
            </snapshots>
        </pluginRepository>
    </pluginRepositories>

    <repositories>
        <repository>
            <id>kotlinx-repository</id>
            <name>kotlinx-repository</name>
            <url>https://maven.pkg.jetbrains.space/public/p/kotlinx-html/maven/</url>
            <releases>
                <enabled>true</enabled>
                <updatePolicy>never</updatePolicy>
            </releases>
            <snapshots>
                <enabled>false</enabled>
                <updatePolicy>never</updatePolicy>
            </snapshots>
        </repository>
        <repository>
            <id>40_openecomp-release</id>
            <name>40_openecomp-release</name>
            <url>https://nexus.onap.org/content/repositories/releases/</url>
            <releases>
                <enabled>true</enabled>
                <updatePolicy>daily</updatePolicy>
            </releases>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
    </repositories>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>com.google.guava</groupId>
                <artifactId>guava</artifactId>
                <version>${guava.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>com.google.code.findbugs</groupId>
                        <artifactId>jsr305</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.jetbrains.kotlin</groupId>
                <artifactId>kotlin-bom</artifactId>
                <version>${kotlin.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.jetbrains.kotlin</groupId>
                <artifactId>kotlin-compiler-embeddable</artifactId>
                <version>${kotlin.version}</version>
            </dependency>
            <dependency>
                <groupId>org.jetbrains.kotlin</groupId>
                <artifactId>kotlin-scripting-compiler-embeddable</artifactId>
                <version>${kotlin.version}</version>
            </dependency>
            <dependency>
                <groupId>org.jetbrains.kotlin</groupId>
                <artifactId>kotlin-script-util</artifactId>
                <version>${kotlin.version}</version>
                <scope>runtime</scope>
            </dependency>
            <dependency>
                <groupId>org.jetbrains.kotlinx</groupId>
                <artifactId>kotlinx-coroutines-core</artifactId>
                <version>${coroutines.version}</version>
            </dependency>
            <dependency>
                <groupId>com.google.code.gson</groupId>
                <artifactId>gson</artifactId>
                <version>${gson.version}</version>
            </dependency>
            <dependency>
                <groupId>io.arrow-kt</groupId>
                <artifactId>arrow-core-data</artifactId>
                <version>${arrow.version}</version>
            </dependency>
            <dependency>
                <groupId>io.arrow-kt</groupId>
                <artifactId>arrow-core-extensions</artifactId>
                <version>${arrow.version}</version>
            </dependency>
            <dependency>
                <groupId>io.arrow-kt</groupId>
                <artifactId>arrow-extras-data</artifactId>
                <version>${arrow.version}</version>
            </dependency>
            <dependency>
                <groupId>io.arrow-kt</groupId>
                <artifactId>arrow-syntax</artifactId>
                <version>${arrow.version}</version>
            </dependency>
            <dependency>
                <groupId>io.arrow-kt</groupId>
                <artifactId>arrow-typeclasses</artifactId>
                <version>${arrow.version}</version>
            </dependency>
            <dependency>
                <groupId>ch.qos.logback</groupId>
                <artifactId>logback-classic</artifactId>
                <version>${logback-classic.version}</version>
                <scope>runtime</scope>
            </dependency>
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-api</artifactId>
                <version>${slf4j-api.version}</version>
            </dependency>
            <dependency>
                <groupId>io.projectreactor</groupId>
                <artifactId>reactor-bom</artifactId>
                <!-- remember to update netty native bindings versions -->
                <version>${reactor-bom.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <!-- Due to security reasons, override transitive kafka-clients dependency version (2.0.0 -> 2.3.1) -->
            <dependency>
                <groupId>org.apache.kafka</groupId>
                <artifactId>kafka-clients</artifactId>
                <version>${kafka-clients.version}</version>
            </dependency>
            <!--
            Disable native extension (epoll) on production for now.
            Might be reintroduced if performance tests prove there is some performance issue.
            -->
            <!--
            <dependency>
                <groupId>io.netty</groupId>
                <artifactId>netty-transport-native-epoll</artifactId>
                <version>4.1.29.Final</version>
                <classifier>${os.detected.classifier}</classifier>
            </dependency>
            -->
            <dependency>
                <groupId>com.google.protobuf</groupId>
                <artifactId>protobuf-java-util</artifactId>
                <version>${protobuf.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>com.google.guava</groupId>
                        <artifactId>guava</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>commons-cli</groupId>
                <artifactId>commons-cli</artifactId>
                <version>${commons-cli.version}</version>
            </dependency>
            <dependency>
                <groupId>javax.json</groupId>
                <artifactId>javax.json-api</artifactId>
                <version>${javax.json-api.version}</version>
            </dependency>
            <dependency>
                <groupId>org.glassfish</groupId>
                <artifactId>javax.json</artifactId>
                <version>${javax.json.version}</version>
            </dependency>
            <dependency>
                <groupId>io.micrometer</groupId>
                <artifactId>micrometer-registry-prometheus</artifactId>
                <version>${micrometer-registry-prometheus.version}</version>
            </dependency>
            <dependency>
                <groupId>org.onap.dcaegen2.services.sdk</groupId>
                <artifactId>hvvesclient-producer-impl</artifactId>
                <version>${sdk.version}</version>
                <scope>runtime</scope>
            </dependency>
            <dependency>
                <groupId>org.onap.dcaegen2.services.sdk</groupId>
                <artifactId>hvvesclient-producer-api</artifactId>
                <version>${sdk.version}</version>
            </dependency>
            <dependency>
                <groupId>org.onap.dcaegen2.services.sdk</groupId>
                <artifactId>hvvesclient-protobuf</artifactId>
                <version>${sdk.version}</version>
            </dependency>
            <dependency>
                <groupId>org.onap.dcaegen2.services.sdk.security</groupId>
                <artifactId>ssl</artifactId>
                <version>${sdk.version}</version>
            </dependency>
            <dependency>
                <groupId>org.onap.dcaegen2.services.sdk.rest.services</groupId>
                <artifactId>cbs-client</artifactId>
                <version>${sdk.version}</version>
            </dependency>

            <!-- Test dependencies -->

            <dependency>
                <groupId>org.jetbrains.spek</groupId>
                <artifactId>spek-api</artifactId>
                <version>${spek.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.jetbrains.spek</groupId>
                <artifactId>spek-junit-platform-engine</artifactId>
                <version>${spek.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.assertj</groupId>
                <artifactId>assertj-core</artifactId>
                <version>${assertj-core.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>com.nhaarman.mockitokotlin2</groupId>
                <artifactId>mockito-kotlin</artifactId>
                <version>${mockito-kotlin.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.jetbrains.kotlin</groupId>
                <artifactId>kotlin-test</artifactId>
                <version>${kotlin.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.jetbrains.kotlinx</groupId>
                <artifactId>kotlinx-coroutines-test</artifactId>
                <version>${coroutines.version}</version>
                <scope>test</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>
</project>
