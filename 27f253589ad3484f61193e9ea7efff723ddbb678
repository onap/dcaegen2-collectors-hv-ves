{
  "comments": [
    {
      "key": {
        "uuid": "a81b16d4_9e03cfa0",
        "filename": "sources/hv-collector-dcae-app-simulator/pom.xml",
        "patchSetId": 5
      },
      "lineNbr": 103,
      "author": {
        "id": 3701
      },
      "writtenOn": "2019-06-24T07:56:55Z",
      "side": 1,
      "message": "not needed",
      "range": {
        "startLine": 100,
        "startChar": 0,
        "endLine": 103,
        "endChar": 21
      },
      "revId": "27f253589ad3484f61193e9ea7efff723ddbb678",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "60fe96ad_676ad25f",
        "filename": "sources/hv-collector-dcae-app-simulator/src/main/kotlin/org/onap/dcae/collectors/veshv/simulators/dcaeapp/DcaeAppConsumerFactory.kt",
        "patchSetId": 5
      },
      "lineNbr": 20,
      "author": {
        "id": 3701
      },
      "writtenOn": "2019-06-24T07:56:55Z",
      "side": 1,
      "message": "should not be in main package",
      "range": {
        "startLine": 20,
        "startChar": 50,
        "endLine": 20,
        "endChar": 57
      },
      "revId": "27f253589ad3484f61193e9ea7efff723ddbb678",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fc231134_6d135cb3",
        "filename": "sources/hv-collector-kafka-consumer/src/main/kotlin/org/onap/dcae/collectors/veshv/kafkaconsumer/state/OffsetConsumer.kt",
        "patchSetId": 5
      },
      "lineNbr": 32,
      "author": {
        "id": 3701
      },
      "writtenOn": "2019-06-24T07:56:55Z",
      "side": 1,
      "message": "Shouldn\u0027t this be something like \"Current consumer offset $offset\" ? (for sure variable `newMessageCount` needs rename)",
      "range": {
        "startLine": 32,
        "startChar": 24,
        "endLine": 32,
        "endChar": 74
      },
      "revId": "27f253589ad3484f61193e9ea7efff723ddbb678",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9d7475d5_28f5c8b9",
        "filename": "sources/hv-collector-kafka-consumer/src/test/kotlin/org/onap/dcae/collectors/veshv/kafkaconsumer/state/OffsetConsumerTest.kt",
        "patchSetId": 5
      },
      "lineNbr": 56,
      "author": {
        "id": 3701
      },
      "writtenOn": "2019-06-24T07:56:55Z",
      "side": 1,
      "message": "```\n    describe(\"OffsetConsumer\") {\n        val mockedMetrics \u003d mock\u003cMetrics\u003e()\n        val offsetConsumer \u003d OffsetConsumer(mockedMetrics)\n\n        on(\"update with consumer record\") {\n            val record \u003d mock\u003cRecord\u003cByteArray, ByteArray\u003e\u003e()\n           // whenever(record.something()).then(return something)\n\n         update(record)\n        it()...\n```",
      "range": {
        "startLine": 35,
        "startChar": 0,
        "endLine": 56,
        "endChar": 2
      },
      "revId": "27f253589ad3484f61193e9ea7efff723ddbb678",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b0bb217c_4a2a962a",
        "filename": "sources/hv-collector-kafka/pom.xml",
        "patchSetId": 5
      },
      "lineNbr": 45,
      "author": {
        "id": 3701
      },
      "writtenOn": "2019-06-24T07:56:55Z",
      "side": 1,
      "message": "What?",
      "range": {
        "startLine": 42,
        "startChar": 15,
        "endLine": 45,
        "endChar": 17
      },
      "revId": "27f253589ad3484f61193e9ea7efff723ddbb678",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "de81b902_74c91256",
        "filename": "sources/hv-collector-kafka/pom.xml",
        "patchSetId": 5
      },
      "lineNbr": 59,
      "author": {
        "id": 3701
      },
      "writtenOn": "2019-06-24T07:56:55Z",
      "side": 1,
      "message": "`test`, but actually already included with hv-collector-test-utils module. I\u0027m not sure though if this module is actually used...",
      "range": {
        "startLine": 59,
        "startChar": 13,
        "endLine": 59,
        "endChar": 20
      },
      "revId": "27f253589ad3484f61193e9ea7efff723ddbb678",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "69064ca2_4ae16791",
        "filename": "sources/hv-collector-kafka/pom.xml",
        "patchSetId": 5
      },
      "lineNbr": 64,
      "author": {
        "id": 3701
      },
      "writtenOn": "2019-06-24T07:56:55Z",
      "side": 1,
      "message": "unused",
      "range": {
        "startLine": 62,
        "startChar": 3,
        "endLine": 64,
        "endChar": 17
      },
      "revId": "27f253589ad3484f61193e9ea7efff723ddbb678",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "33e34173_8095c285",
        "filename": "sources/hv-collector-kafka/src/main/kotlin/org/onap/dcae/collectors/veshv/kafka/api/KafkaConsumer.kt",
        "patchSetId": 5
      },
      "lineNbr": 26,
      "author": {
        "id": 3701
      },
      "writtenOn": "2019-06-24T07:56:55Z",
      "side": 1,
      "message": "I believe we could use ConsumerRecord here to make the interface generic and avoid depending on reactor kafka",
      "range": {
        "startLine": 26,
        "startChar": 23,
        "endLine": 26,
        "endChar": 37
      },
      "revId": "27f253589ad3484f61193e9ea7efff723ddbb678",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5730bcdc_edcb2d8c",
        "filename": "sources/hv-collector-kafka/src/test/kotlin/org/onap/dcae/collectors/veshv/kafka/api/ConsumerFactoryTest.kt",
        "patchSetId": 5
      },
      "lineNbr": 31,
      "author": {
        "id": 3701
      },
      "writtenOn": "2019-06-24T07:56:55Z",
      "side": 1,
      "message": "describe",
      "range": {
        "startLine": 31,
        "startChar": 4,
        "endLine": 31,
        "endChar": 9
      },
      "revId": "27f253589ad3484f61193e9ea7efff723ddbb678",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "253a0ac6_a2b96a32",
        "filename": "sources/hv-collector-kafka/src/test/kotlin/org/onap/dcae/collectors/veshv/kafka/api/ConsumerFactoryTest.kt",
        "patchSetId": 5
      },
      "lineNbr": 33,
      "author": {
        "id": 3701
      },
      "writtenOn": "2019-06-24T07:56:55Z",
      "side": 1,
      "message": "given(consumerProvider){\n   val mockedKafkaConsumer \u003d mock\u003cKafkaConsumer\u003e()\n   val consumerProvider \u003d { mockedKafkaConsumer }",
      "range": {
        "startLine": 33,
        "startChar": 8,
        "endLine": 33,
        "endChar": 55
      },
      "revId": "27f253589ad3484f61193e9ea7efff723ddbb678",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b65c7b0b_49794dfc",
        "filename": "sources/hv-collector-kafka/src/test/kotlin/org/onap/dcae/collectors/veshv/kafka/api/ConsumerFactoryTest.kt",
        "patchSetId": 5
      },
      "lineNbr": 44,
      "author": {
        "id": 3701
      },
      "writtenOn": "2019-06-24T07:56:55Z",
      "side": 1,
      "message": "I guess we should test that we are able to create multiple consumers (more than one). Also, assert that consumerS map has expected size and not only that it\u0027s not empty",
      "range": {
        "startLine": 35,
        "startChar": 12,
        "endLine": 44,
        "endChar": 9
      },
      "revId": "27f253589ad3484f61193e9ea7efff723ddbb678",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    }
  ]
}