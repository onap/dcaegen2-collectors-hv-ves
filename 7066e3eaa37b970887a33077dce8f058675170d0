{
  "comments": [
    {
      "key": {
        "uuid": "361b0c2f_3e0ea8e6",
        "filename": "tools/performance/cloud/cloud-based-performance-test.sh",
        "patchSetId": 2
      },
      "lineNbr": 2,
      "author": {
        "id": 3701
      },
      "writtenOn": "2019-07-15T17:40:49Z",
      "side": 1,
      "message": "why comment?",
      "range": {
        "startLine": 2,
        "startChar": 1,
        "endLine": 2,
        "endChar": 4
      },
      "revId": "7066e3eaa37b970887a33077dce8f058675170d0",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e859ffaa_43e5ecb7",
        "filename": "tools/performance/cloud/cloud-based-performance-test.sh",
        "patchSetId": 2
      },
      "lineNbr": 21,
      "author": {
        "id": 3081
      },
      "writtenOn": "2019-07-15T15:03:57Z",
      "side": 1,
      "message": "You used word \"environment\" in setup method. Maybe that would be a better word?",
      "range": {
        "startLine": 21,
        "startChar": 19,
        "endLine": 21,
        "endChar": 24
      },
      "revId": "7066e3eaa37b970887a33077dce8f058675170d0",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cccc66b2_d9ecb4cf",
        "filename": "tools/performance/cloud/cloud-based-performance-test.sh",
        "patchSetId": 2
      },
      "lineNbr": 21,
      "author": {
        "id": 3701
      },
      "writtenOn": "2019-07-15T17:40:49Z",
      "side": 1,
      "message": "Also, if we are at language nuances, then you should stick to single form of sentences.\nEither: \"Cleaning something\", \"AttemptING something\" etc.\nOr: \"Clean, attempt\" etc.\n\nIMO first option is nicer.",
      "parentUuid": "e859ffaa_43e5ecb7",
      "range": {
        "startLine": 21,
        "startChar": 19,
        "endLine": 21,
        "endChar": 24
      },
      "revId": "7066e3eaa37b970887a33077dce8f058675170d0",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c6e08a0c_b9bbe5a1",
        "filename": "tools/performance/cloud/cloud-based-performance-test.sh",
        "patchSetId": 2
      },
      "lineNbr": 24,
      "author": {
        "id": 3081
      },
      "writtenOn": "2019-07-15T15:03:57Z",
      "side": 1,
      "message": "Extract that to a variable",
      "range": {
        "startLine": 24,
        "startChar": 51,
        "endLine": 24,
        "endChar": 55
      },
      "revId": "7066e3eaa37b970887a33077dce8f058675170d0",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "345a22ea_bcee40ae",
        "filename": "tools/performance/cloud/cloud-based-performance-test.sh",
        "patchSetId": 2
      },
      "lineNbr": 39,
      "author": {
        "id": 3081
      },
      "writtenOn": "2019-07-15T15:03:57Z",
      "side": 1,
      "message": "Creating ${i} producer(s)",
      "range": {
        "startLine": 39,
        "startChar": 14,
        "endLine": 39,
        "endChar": 43
      },
      "revId": "7066e3eaa37b970887a33077dce8f058675170d0",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6b33cdee_cd927782",
        "filename": "tools/performance/cloud/cloud-based-performance-test.sh",
        "patchSetId": 2
      },
      "lineNbr": 49,
      "author": {
        "id": 3081
      },
      "writtenOn": "2019-07-15T14:33:41Z",
      "side": 1,
      "message": "Fix description",
      "range": {
        "startLine": 49,
        "startChar": 23,
        "endLine": 49,
        "endChar": 55
      },
      "revId": "7066e3eaa37b970887a33077dce8f058675170d0",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b8f0e7ea_80e460ab",
        "filename": "tools/performance/cloud/cloud-based-performance-test.sh",
        "patchSetId": 2
      },
      "lineNbr": 52,
      "author": {
        "id": 3081
      },
      "writtenOn": "2019-07-15T14:33:41Z",
      "side": 1,
      "message": "producer containers",
      "range": {
        "startLine": 52,
        "startChar": 41,
        "endLine": 52,
        "endChar": 61
      },
      "revId": "7066e3eaa37b970887a33077dce8f058675170d0",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "82f0a30e_582a0f08",
        "filename": "tools/performance/cloud/cloud-based-performance-test.sh",
        "patchSetId": 2
      },
      "lineNbr": 53,
      "author": {
        "id": 3081
      },
      "writtenOn": "2019-07-15T14:33:41Z",
      "side": 1,
      "message": "Align the colon with that above",
      "range": {
        "startLine": 53,
        "startChar": 23,
        "endLine": 53,
        "endChar": 24
      },
      "revId": "7066e3eaa37b970887a33077dce8f058675170d0",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d6a19fa7_dfb8872b",
        "filename": "tools/performance/cloud/cloud-based-performance-test.sh",
        "patchSetId": 2
      },
      "lineNbr": 55,
      "author": {
        "id": 3081
      },
      "writtenOn": "2019-07-15T14:33:41Z",
      "side": 1,
      "message": "Fix that description",
      "range": {
        "startLine": 55,
        "startChar": 23,
        "endLine": 55,
        "endChar": 78
      },
      "revId": "7066e3eaa37b970887a33077dce8f058675170d0",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3f4a9640_8e246a5b",
        "filename": "tools/performance/cloud/cloud-based-performance-test.sh",
        "patchSetId": 2
      },
      "lineNbr": 70,
      "author": {
        "id": 3081
      },
      "writtenOn": "2019-07-15T15:03:57Z",
      "side": 1,
      "message": "Use the same verb form as in the other echos (\"Creating\")",
      "revId": "7066e3eaa37b970887a33077dce8f058675170d0",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6b241fd9_8ce720c9",
        "filename": "tools/performance/cloud/cloud-based-performance-test.sh",
        "patchSetId": 2
      },
      "lineNbr": 74,
      "author": {
        "id": 3081
      },
      "writtenOn": "2019-07-15T15:03:57Z",
      "side": 1,
      "message": "1.\ngrepping by \"consumer\" pod name isn\u0027t the best filter due to ambiguity\n\nYou can filter it by \"app\" label defined in consumer-deployment.yaml. \n\nFor kubectl output filtering check out https://kubernetes.io/docs/concepts/overview/working-with-objects/field-selectors/\n\nThis allows you to chain label with status.phase field selector.\n\n2.\nThat -eq 2 condition can also cause problems. What if someone changed the \"replicas\" field in the deployment yaml?\nWhat you could do *instead of the first method* is to refer to both consumer deployments directly by name and check if all desired replicas are running (actual pods \u003d\u003d number of pods defined in \"replicas\" property) in each of them.",
      "revId": "7066e3eaa37b970887a33077dce8f058675170d0",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fe6e676d_098a6df8",
        "filename": "tools/performance/cloud/cloud-based-performance-test.sh",
        "patchSetId": 2
      },
      "lineNbr": 81,
      "author": {
        "id": 3081
      },
      "writtenOn": "2019-07-15T14:33:41Z",
      "side": 1,
      "message": "What do you need it for?",
      "revId": "7066e3eaa37b970887a33077dce8f058675170d0",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b5b49b83_5ff3ebef",
        "filename": "tools/performance/cloud/cloud-based-performance-test.sh",
        "patchSetId": 2
      },
      "lineNbr": 83,
      "author": {
        "id": 3081
      },
      "writtenOn": "2019-07-15T14:33:41Z",
      "side": 1,
      "message": "If you use that print only here theres no need to extract it to separate method",
      "revId": "7066e3eaa37b970887a33077dce8f058675170d0",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b3ac8f96_686f76e9",
        "filename": "tools/performance/cloud/cloud-based-performance-test.sh",
        "patchSetId": 2
      },
      "lineNbr": 89,
      "author": {
        "id": 3081
      },
      "writtenOn": "2019-07-15T14:33:41Z",
      "side": 1,
      "message": "What if a producer fails to start? I think the status will be different than \"Completed\" in some cases, waht will cause infinite loop.",
      "revId": "7066e3eaa37b970887a33077dce8f058675170d0",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1e4ac793_6a781223",
        "filename": "tools/performance/cloud/cloud-based-performance-test.sh",
        "patchSetId": 2
      },
      "lineNbr": 113,
      "author": {
        "id": 3081
      },
      "writtenOn": "2019-07-15T14:33:41Z",
      "side": 1,
      "message": "If you decided to specify containers as a program argument remove producer.pod.count property from properties file",
      "revId": "7066e3eaa37b970887a33077dce8f058675170d0",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "66201076_15c86339",
        "filename": "tools/performance/cloud/cloud-based-performance-test.sh",
        "patchSetId": 2
      },
      "lineNbr": 117,
      "author": {
        "id": 3081
      },
      "writtenOn": "2019-07-15T14:33:41Z",
      "side": 1,
      "message": "I cant find usage of this variable other than configuration print. Could you explain the idea of that \"--mode\" argument?In consumer-deployment we have deployments for both types of consumers.",
      "revId": "7066e3eaa37b970887a33077dce8f058675170d0",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "65a82125_73be155b",
        "filename": "tools/performance/cloud/test.properties",
        "patchSetId": 2
      },
      "lineNbr": 5,
      "author": {
        "id": 3701
      },
      "writtenOn": "2019-07-15T17:40:49Z",
      "side": 1,
      "message": "This looks like some hardcoded IP - can\u0027t we use K8s DNS here since producers are in onap namespace?",
      "range": {
        "startLine": 5,
        "startChar": 22,
        "endLine": 5,
        "endChar": 35
      },
      "revId": "7066e3eaa37b970887a33077dce8f058675170d0",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    }
  ]
}