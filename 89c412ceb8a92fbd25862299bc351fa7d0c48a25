{
  "comments": [
    {
      "key": {
        "uuid": "1a76adc5_c36086a7",
        "filename": "hv-collector-dcae-app-simulator/src/main/kotlin/org/onap/dcae/collectors/veshv/simulators/dcaeapp/impl/DcaeAppSimulator.kt",
        "patchSetId": 8
      },
      "lineNbr": 47,
      "author": {
        "id": 3701
      },
      "writtenOn": "2018-08-29T12:47:07Z",
      "side": 1,
      "message": "Can\u0027t we somehow get rid of this nullable? \nMaybe NullObjectPattern in ConsumerStateProvide?",
      "revId": "89c412ceb8a92fbd25862299bc351fa7d0c48a25",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a76adc5_434d563d",
        "filename": "hv-collector-dcae-app-simulator/src/main/kotlin/org/onap/dcae/collectors/veshv/simulators/dcaeapp/impl/DcaeAppSimulator.kt",
        "patchSetId": 8
      },
      "lineNbr": 67,
      "author": {
        "id": 3701
      },
      "writtenOn": "2018-08-29T12:47:07Z",
      "side": 1,
      "message": "We could extract Params parsing and validating to separate method\n```\nval messageParams \u003d extractMessageParameters(input)\nval expectedEvents \u003d generateEvents(messageParams).bind()\nval actualEvents \u003d decodeConsumedEvents()\n```",
      "revId": "89c412ceb8a92fbd25862299bc351fa7d0c48a25",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a76adc5_036afe80",
        "filename": "hv-collector-dcae-app-simulator/src/main/kotlin/org/onap/dcae/collectors/veshv/simulators/dcaeapp/impl/adapters/ApiServer.kt",
        "patchSetId": 8
      },
      "lineNbr": 1,
      "author": {
        "id": 3701
      },
      "writtenOn": "2018-08-29T12:47:07Z",
      "side": 1,
      "message": "File history is missing, can we restore it?",
      "revId": "89c412ceb8a92fbd25862299bc351fa7d0c48a25",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a76adc5_c32e4643",
        "filename": "hv-collector-dcae-app-simulator/src/main/kotlin/org/onap/dcae/collectors/veshv/simulators/dcaeapp/impl/adapters/ApiServer.kt",
        "patchSetId": 8
      },
      "lineNbr": 55,
      "author": {
        "id": 3701
      },
      "writtenOn": "2018-08-29T12:47:07Z",
      "side": 1,
      "message": "`asIo` method is nice and generic, however as it\u0027s used in this class twice in the same way, we could instead extend Context class\n```\n\nprivate fun Context.bodyIO() \u003d IO.async\u003cTypedData\u003e { cb -\u003e\n    request.body.then { result -\u003e\n        cb(Right(result))\n    }\n}\n```\nAlso tbh `cb` naming is not clear for me - is it `callback` abbreviation?",
      "revId": "89c412ceb8a92fbd25862299bc351fa7d0c48a25",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a76adc5_e33342a9",
        "filename": "hv-collector-dcae-app-simulator/src/main/kotlin/org/onap/dcae/collectors/veshv/simulators/dcaeapp/impl/adapters/ApiServer.kt",
        "patchSetId": 8
      },
      "lineNbr": 121,
      "author": {
        "id": 3701
      },
      "writtenOn": "2018-08-29T12:47:07Z",
      "side": 1,
      "message": "We have `Status` class in utils, let\u0027s move these consts there",
      "revId": "89c412ceb8a92fbd25862299bc351fa7d0c48a25",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a76adc5_6325f207",
        "filename": "hv-collector-dcae-app-simulator/src/main/kotlin/org/onap/dcae/collectors/veshv/simulators/dcaeapp/impl/adapters/KafkaSource.kt",
        "patchSetId": 8
      },
      "lineNbr": 28,
      "author": {
        "id": 3701
      },
      "writtenOn": "2018-08-29T12:47:07Z",
      "side": 1,
      "message": "unused import",
      "revId": "89c412ceb8a92fbd25862299bc351fa7d0c48a25",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a76adc5_43223653",
        "filename": "hv-collector-dcae-app-simulator/src/main/kotlin/org/onap/dcae/collectors/veshv/simulators/dcaeapp/impl/adapters/KafkaSource.kt",
        "patchSetId": 8
      },
      "lineNbr": 52,
      "author": {
        "id": 3701
      },
      "writtenOn": "2018-08-29T12:47:07Z",
      "side": 1,
      "message": "Neat :)",
      "revId": "89c412ceb8a92fbd25862299bc351fa7d0c48a25",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a76adc5_a3e0eafa",
        "filename": "hv-collector-dcae-app-simulator/src/test/kotlin/org/onap/dcae/collectors/veshv/simulators/dcaeapp/impl/ConsumerTest.kt",
        "patchSetId": 8
      },
      "lineNbr": 34,
      "author": {
        "id": 3701
      },
      "writtenOn": "2018-08-29T12:47:07Z",
      "side": 1,
      "message": "Let\u0027s add `describe` section (also in DcaeAppSimulatorTest)",
      "revId": "89c412ceb8a92fbd25862299bc351fa7d0c48a25",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a76adc5_03ef5eea",
        "filename": "hv-collector-dcae-app-simulator/src/test/kotlin/org/onap/dcae/collectors/veshv/simulators/dcaeapp/impl/ConsumerTest.kt",
        "patchSetId": 8
      },
      "lineNbr": 47,
      "author": {
        "id": 3701
      },
      "writtenOn": "2018-08-29T12:47:07Z",
      "side": 1,
      "message": "Let\u0027s extract `receiverRecord` and move it along `value` before `cut` declaration, so we can reuse it\n```\nit(\"should contain empty state in the beginning\") {\n    assertEmptyState(cut)\n}\n\non(\"update\") {\n    cut.update(receiverRecord).unsafeRunSync()\n\n    it(\"should contain one message\") {\n        assertState(cut, byteArrayOf(2))\n        assertThat(cut.currentState().consumedMessages)\n                .containsOnly(value)\n    }\n\n    it(\"should contain empty state message after reset\") {\n        cut.reset().unsafeRunSync()\n        assertEmptyState(cut)\n    }\n}\n```\nNote that we can get also rid of `before` section then",
      "revId": "89c412ceb8a92fbd25862299bc351fa7d0c48a25",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a76adc5_63941243",
        "filename": "hv-collector-dcae-app-simulator/src/test/kotlin/org/onap/dcae/collectors/veshv/simulators/dcaeapp/impl/DcaeAppSimulatorTest.kt",
        "patchSetId": 8
      },
      "lineNbr": 99,
      "author": {
        "id": 3701
      },
      "writtenOn": "2018-08-29T12:47:07Z",
      "side": 1,
      "message": "We can avoid using these comments in whole file with Spek DSL:\n```\ndescribe(\"DcaeAppSimulator\") {\n    describe(\"configuration change\") {\n        given(\"empty topics set\")\n           val topics \u003d emptySet()\n           on(\"listenOnTopics\")\n               cut.listenOnTopics(topics)\n               it(\"should fail\") { assert }\n\n        given(\"set of topics with any empty string\")\n           val topics \u003d setOf(\"hvMeas\", \" \", \"faults\")\n           on(\"listenOnTopics\")\n               cut.listenOnTopics(topics)\n               it(\"should fail\") { assert }\n\n        given(\"valid set of topics\") {\n           val topics \u003d setOf(\"hvMeas\", \"faults\")\n           val topicsString \u003d topics.joinToString(\",\")\n\n           on(\"listenOnTopics called with set\")\n               cut.listenOnTopics(topics)\n               it(\"should subscribe to given topics\") { assert }\n           on(\"listenOnTopics called with comma separeted topics list\")\n               cut.listenOnTopics(topicsString)\n               it(\"should subscribe to given topics\") { assert }\n        }\n... etc.\n```\nIt may be little more effort with nesting, but I think readability is greatly enhanced and it does look then as specification :)",
      "revId": "89c412ceb8a92fbd25862299bc351fa7d0c48a25",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a76adc5_c38ac61a",
        "filename": "hv-collector-dcae-app-simulator/src/test/kotlin/org/onap/dcae/collectors/veshv/simulators/dcaeapp/impl/DcaeAppSimulatorTest.kt",
        "patchSetId": 8
      },
      "lineNbr": 157,
      "author": {
        "id": 3701
      },
      "writtenOn": "2018-08-29T12:47:07Z",
      "side": 1,
      "message": "We could add case for unparsable json",
      "revId": "89c412ceb8a92fbd25862299bc351fa7d0c48a25",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a76adc5_a3854a08",
        "filename": "hv-collector-dcae-app-simulator/src/test/kotlin/org/onap/dcae/collectors/veshv/simulators/dcaeapp/impl/DcaeAppSimulatorTest.kt",
        "patchSetId": 8
      },
      "lineNbr": 176,
      "author": {
        "id": 3701
      },
      "writtenOn": "2018-08-29T12:47:07Z",
      "side": 1,
      "message": "Let\u0027s make it function `sampleJsonAsStream` to avoid duplicate declarations",
      "revId": "89c412ceb8a92fbd25862299bc351fa7d0c48a25",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a76adc5_43a556a0",
        "filename": "pom.xml",
        "patchSetId": 8
      },
      "lineNbr": 450,
      "author": {
        "id": 3701
      },
      "writtenOn": "2018-08-29T12:47:07Z",
      "side": 1,
      "message": "Let\u0027s add little explanation to commit message",
      "revId": "89c412ceb8a92fbd25862299bc351fa7d0c48a25",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    }
  ]
}