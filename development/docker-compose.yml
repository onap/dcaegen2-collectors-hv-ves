version: "3.5"
services:

  #
  # DMaaP Message Router
  #

  message-router-zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"

  message-router-kafka:
    #    image: nexus3.onap.org:10001/onap/dmaap/kafka01101:0.0.1
    image: wurstmeister/kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
      KAFKA_ZOOKEEPER_CONNECT: "message-router-zookeeper:2181"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "INTERNAL_PLAINTEXT:PLAINTEXT,EXTERNAL_PLAINTEXT:PLAINTEXT"
      KAFKA_ADVERTISED_LISTENERS: "INTERNAL_PLAINTEXT://message-router-kafka:9092"
      KAFKA_LISTENERS: "INTERNAL_PLAINTEXT://0.0.0.0:9092"
      KAFKA_INTER_BROKER_LISTENER_NAME: "INTERNAL_PLAINTEXT"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - message-router-zookeeper


  #
  # Consul / CBS
  #

  consul-server:
    image: docker.io/consul:1.0.6
    ports:
      - "8500:8500"
    volumes:
      - ./consul/:/consul/config

  consul-config:
    image: docker.io/consul:1.0.6
    restart: on-failure
    command: ["kv", "put", "-http-addr=http://consul-server:8500", "dcae-hv-ves-collector", '{
                                              "streams_publishes": {
                                                "perf3gpp": {
                                                  "type": "kafka",
                                                  "kafka_info": {
                                                    "bootstrap_servers": "message-router-kafka:9092",
                                                    "topic_name": "HV_VES_PERF3GPP"
                                                  }
                                                }
                                              }
                                            }'
    ]
    depends_on:
      - consul-server

  config-binding-service:
    image: nexus3.onap.org:10001/onap/org.onap.dcaegen2.platform.configbinding.app-app:2.2.4
    ports:
      - "10000:10000"
    environment:
      CONSUL_HOST: "consul-server"
    depends_on:
      - consul-config

  #
  # DCAE HV VES Collector
  #

  ves-hv-collector:
    image: onap/org.onap.dcaegen2.collectors.hv-ves.hv-collector-main:latest
    ports:
      - "6060:6060"
      - "6061:6061/tcp"
    environment:
      JAVA_OPTS: "-Dio.netty.leakDetection.level=paranoid -Dlogback.configurationFile=/etc/ONAP/dcae-hv-ves-collector/logback.xml"
      VESHV_CONFIGURATION_FILE: "/etc/ves-hv/configuration/base.json"
      CONSUL_HOST: "consul-server"
      CONFIG_BINDING_SERVICE: "CBS"
      HOSTNAME: "dcae-hv-ves-collector"
    healthcheck:
      test: ./healthcheck.sh || exit 1
      interval: 10s
      timeout: 3s
      retries: 3
      start_period: 15s
    depends_on:
      - message-router-kafka
      - config-binding-service
    volumes:
      - ./configuration/:/etc/ves-hv/configuration/
      - ./ssl/:/etc/ves-hv/ssl/
      - ./logs:/var/log/ONAP/dcae-hv-ves-collector


  #
  # Simulators
  #

  xnf-simulator:
    image: onap/org.onap.dcaegen2.collectors.hv-ves.hv-collector-xnf-simulator
    ports:
      - "6062:6062/tcp"
      - "6063:6063"
    command: ["--listen-port", "6062",
              "--health-check-api-port", "6063",
              "--ves-host", "ves-hv-collector",
              "--ves-port", "6061",
              "--key-store", "/etc/ves-hv/client.p12",
              "--key-store-password", "onaponap",
              "--trust-store-password", "onaponap"]
    healthcheck:
      test: curl -f http://localhost:6063/health/ready || exit 1
      interval: 10s
      timeout: 3s
      retries: 3
      start_period: 10s
    depends_on:
      - ves-hv-collector
    volumes:
      - ./ssl/:/etc/ves-hv/

  dcae-app-simulator:
    image: onap/org.onap.dcaegen2.collectors.hv-ves.hv-collector-dcae-app-simulator
    ports:
      - "6064:6064/tcp"
    command: ["--listen-port", "6064",
              "--kafka-bootstrap-servers", "message-router-kafka:9092",
              "--kafka-topics", "HV_VES_PERF3GPP"]
    depends_on:
      - message-router-kafka

  #
  # Monitoring
  #

  prometheus:
    image: prom/prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml

  grafana:
    image: grafana/grafana
    ports:
      - "3000:3000"
    environment:
      GF_AUTH_DISABLE_LOGIN_FORM: "true"
      GF_AUTH_DISABLE_SIGNOUT_MENU: "true"
      GF_AUTH_ANONYMOUS_ENABLED: "true"
      GF_AUTH_ANONYMOUS_ORG_ROLE: "Admin"
    volumes:
      - ./grafana/datasources:/etc/grafana/provisioning/datasources
      - ./grafana/dashboards-providers:/etc/grafana/provisioning/dashboards
      # defined in ./grafana/dashboards-providers/dasboard-providers.yaml
      - ./grafana/dashboards:/var/lib/grafana/dashboards/hv-ves


