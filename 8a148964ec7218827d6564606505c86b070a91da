{
  "comments": [
    {
      "key": {
        "uuid": "a698d1ec_c44be00f",
        "filename": "/COMMIT_MSG",
        "patchSetId": 6
      },
      "lineNbr": 11,
      "author": {
        "id": 3701
      },
      "writtenOn": "2019-02-13T12:05:41Z",
      "side": 1,
      "message": "typo",
      "range": {
        "startLine": 11,
        "startChar": 25,
        "endLine": 11,
        "endChar": 34
      },
      "revId": "8a148964ec7218827d6564606505c86b070a91da",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e6354fe7_b937c1ad",
        "filename": "sources/hv-collector-dcae-app-simulator/src/test/kotlin/org/onap/dcae/collectors/veshv/simulators/dcaeapp/impl/MessageStreamValidationTest.kt",
        "patchSetId": 6
      },
      "lineNbr": 84,
      "author": {
        "id": 3701
      },
      "writtenOn": "2019-02-13T12:05:41Z",
      "side": 1,
      "message": "Function from WireFrameCodecsTest could be used (after extraction to test-utils or somewhere):\n```\nprivate fun \u003cA, B\u003e assertFailedWithError(either: Either\u003cA, B\u003e, assertj: (ObjectAssert\u003cA\u003e) -\u003e Unit) {\n    either.fold({ assertj(assertThat(it)) }, { kotlin.test.fail(\"Error expected\") })\n}\n```\n\nwith usage:\n```\nassertFailedWithError(result) { it.isInstanceOf(IllegalArgumentException::class.java) }\n```",
      "revId": "8a148964ec7218827d6564606505c86b070a91da",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6ee36f51_2ce25a61",
        "filename": "sources/hv-collector-ves-message-generator/src/main/kotlin/org/onap/dcae/collectors/veshv/ves/message/generator/api/MessageGenerator.kt",
        "patchSetId": 6
      },
      "lineNbr": 32,
      "author": {
        "id": 3701
      },
      "writtenOn": "2019-02-13T12:05:41Z",
      "side": 1,
      "message": "Instead of comments we can always extract to method:\n```\n        amount \u003c 0L -\u003e repeatForever(message)\n        amount \u003d\u003d 0L -\u003e emptyMessageStream()\n        else -\u003e repeatNTimes(message, amount)\n```",
      "revId": "8a148964ec7218827d6564606505c86b070a91da",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "587dec50_1d99256e",
        "filename": "sources/hv-collector-ves-message-generator/src/test/kotlin/org/onap/dcae/collectors/veshv/ves/message/generator/impl/MessageParametersParserTest.kt",
        "patchSetId": 6
      },
      "lineNbr": 97,
      "author": {
        "id": 3701
      },
      "writtenOn": "2019-02-13T12:05:41Z",
      "side": 1,
      "message": "As in other comment - assertFailedWithError",
      "revId": "8a148964ec7218827d6564606505c86b070a91da",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8276b125_cef26c9c",
        "filename": "sources/hv-collector-ves-message-generator/src/test/kotlin/org/onap/dcae/collectors/veshv/ves/message/generator/impl/MessageParametersParserTest.kt",
        "patchSetId": 6
      },
      "lineNbr": 105,
      "author": {
        "id": 3701
      },
      "writtenOn": "2019-02-13T12:05:41Z",
      "side": 1,
      "message": "As in other comment - assertFailedWithError",
      "revId": "8a148964ec7218827d6564606505c86b070a91da",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    }
  ]
}