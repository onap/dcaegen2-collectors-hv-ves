{
  "comments": [
    {
      "key": {
        "uuid": "6e394206_8a2df33f",
        "filename": "sources/hv-collector-kafka-consumer/src/main/kotlin/org/onap/dcae/collectors/veshv/kafkaconsumer/main.kt",
        "patchSetId": 2
      },
      "lineNbr": 41,
      "author": {
        "id": 3701
      },
      "writtenOn": "2019-06-19T10:42:17Z",
      "side": 1,
      "message": "And what if we get null or await fails? Shoudln\u0027t we return ExitFailure then?",
      "range": {
        "startLine": 41,
        "startChar": 20,
        "endLine": 41,
        "endChar": 37
      },
      "revId": "c347ebbf69b22e4466a352903b56a9c1623747b6",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fd1ba1ac_8b2d4760",
        "filename": "sources/hv-collector-kafka-consumer/src/main/kotlin/org/onap/dcae/collectors/veshv/kafkaconsumer/metrics/MicrometerMetrics.kt",
        "patchSetId": 2
      },
      "lineNbr": 31,
      "author": {
        "id": 3701
      },
      "writtenOn": "2019-06-19T10:42:17Z",
      "side": 1,
      "message": "After applying my comment from MicroPromMetProv, this would become:\n```\n\ninternal class MicrometerMetrics private constructor(private val registry: PrometheusMeterRegistry) : Metrics() {\n\n    fun lastStatus(): Mono\u003cString\u003e \u003d Mono.fromCallable {\n        registry.scrape()\n    }\n\n    companion object {\n        val INSTANCE by lazy { MicrometerMetrics(PrometheusMeterRegistry(PrometheusConfig.DEFAULT)) }\n    }\n}\n```\nwhich seems a lot nicer.",
      "range": {
        "startLine": 31,
        "startChar": 15,
        "endLine": 31,
        "endChar": 32
      },
      "revId": "c347ebbf69b22e4466a352903b56a9c1623747b6",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "511bb5fe_df8f257c",
        "filename": "sources/hv-collector-kafka-consumer/src/main/kotlin/org/onap/dcae/collectors/veshv/kafkaconsumer/metrics/MicrometerPrometheusMetricsProvider.kt",
        "patchSetId": 2
      },
      "lineNbr": 30,
      "author": {
        "id": 3701
      },
      "writtenOn": "2019-06-19T10:42:17Z",
      "side": 1,
      "message": "We are including whole healthcheck module to only use this interface.\n\nAs kafka-consumer module is self-contained and is not exposing any API, I believe it\u0027s completely fine to use `MicrometerMetrics` \ndirectly, i.e. move lastStatus inside of it (maybe also rename to PrometheusMetrics), omit whole providing stuff.",
      "range": {
        "startLine": 30,
        "startChar": 100,
        "endLine": 30,
        "endChar": 125
      },
      "revId": "c347ebbf69b22e4466a352903b56a9c1623747b6",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b90102a0_bb04eebd",
        "filename": "sources/hv-collector-kafka-consumer/src/main/kotlin/org/onap/dcae/collectors/veshv/kafkaconsumer/metrics/api/PrometheusApiServer.kt",
        "patchSetId": 2
      },
      "lineNbr": 40,
      "author": {
        "id": 3701
      },
      "writtenOn": "2019-06-19T10:42:17Z",
      "side": 1,
      "message": "As far as I remember, this path was \u0027standardized\u0027 in SDK as `/metrics`.",
      "range": {
        "startLine": 40,
        "startChar": 38,
        "endLine": 40,
        "endChar": 59
      },
      "revId": "c347ebbf69b22e4466a352903b56a9c1623747b6",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "451e7714_d801e91d",
        "filename": "sources/hv-collector-kafka-consumer/src/main/kotlin/org/onap/dcae/collectors/veshv/kafkaconsumer/metrics/api/PrometheusApiServer.kt",
        "patchSetId": 2
      },
      "lineNbr": 42,
      "author": {
        "id": 3701
      },
      "writtenOn": "2019-06-19T10:42:17Z",
      "side": 1,
      "message": "That\u0027s third place in our codebase with these lines next to each other - maybe something like `bindAsServerHandle` ?",
      "range": {
        "startLine": 41,
        "startChar": 0,
        "endLine": 42,
        "endChar": 50
      },
      "revId": "c347ebbf69b22e4466a352903b56a9c1623747b6",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a2f2482b_35f72243",
        "filename": "sources/hv-collector-utils/src/main/kotlin/org/onap/dcae/collectors/veshv/utils/server_handle.kt",
        "patchSetId": 2
      },
      "lineNbr": 65,
      "author": {
        "id": 3701
      },
      "writtenOn": "2019-06-19T10:42:17Z",
      "side": 1,
      "message": "Please explain this change in commit message, as it seems completely unrelated to scope of this task.\n\nAlso, why no return statement?\n\nWhy not using `.sync` like it was in previous versions?",
      "range": {
        "startLine": 63,
        "startChar": 23,
        "endLine": 65,
        "endChar": 5
      },
      "revId": "c347ebbf69b22e4466a352903b56a9c1623747b6",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    }
  ]
}